/*// <auto-generated />
using System;
using BookStoreApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bokhandel_console.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    [Migration("20241216145204_AddForeignKeys")]
    partial class AddForeignKeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStoreApp.Butiker", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Butiksnamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Butiker");
                });

            modelBuilder.Entity("BookStoreApp.Böcker", b =>
                {
                    b.Property<string>("ISBN13")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FörfattareID")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Språk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Utgivningsdatum")
                        .HasColumnType("datetime2");

                    b.HasKey("ISBN13");

                    b.HasIndex("FörfattareID");

                    b.ToTable("Böcker");
                });

            modelBuilder.Entity("BookStoreApp.Författar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Efternamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Födelsedatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Förnamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Författar");
                });

            modelBuilder.Entity("BookStoreApp.Lagersaldo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Antal")
                        .HasColumnType("int");

                    b.Property<string>("BokISBN13")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ButikID")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BokISBN13");

                    b.HasIndex("ButikID");

                    b.ToTable("Lagersaldo");
                });

            modelBuilder.Entity("BookStoreApp.Böcker", b =>
                {
                    b.HasOne("BookStoreApp.Författar", "Författar")
                        .WithMany("Böcker")
                        .HasForeignKey("FörfattareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Författar");
                });

            modelBuilder.Entity("BookStoreApp.Lagersaldo", b =>
                {
                    b.HasOne("BookStoreApp.Böcker", "Bok")
                        .WithMany()
                        .HasForeignKey("BokISBN13");

                    b.HasOne("BookStoreApp.Butiker", "Butiker")
                        .WithMany("Lagersaldo")
                        .HasForeignKey("ButikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bok");

                    b.Navigation("Butiker");
                });

            modelBuilder.Entity("BookStoreApp.Butiker", b =>
                {
                    b.Navigation("Lagersaldo");
                });

            modelBuilder.Entity("BookStoreApp.Författar", b =>
                {
                    b.Navigation("Böcker");
                });
#pragma warning restore 612, 618
        }
    }
}
*/

